{
  "Übung 1": {
    "1.1": {
      "content": {"questions": ["Mit welchen fachlichen Argumenten wurde das WWW-Proposal von TBL abgelehnt?","Was sind die fachlichen Argumente, warum das WWW dennoch ein Erfolg wurde?","Was wäre der Preis für die garantierte Verhinderung von “broken links”?"],
                  "answers": ["Das Konzept der Evolvierbarkeit wurde als  vage misinterpretiert.\r\nDie Hypertext-Community hatte den Eindruck in der Wissenschaft schon weiter fortgeschritten zu sein. Weiterhin gab es in TBLs Konzept die Möglichkeit, dass broken Links vorkommen können. Diese müssten laut der Hypertext-Community vermeidbar sein. Diese setzte also einen Schwerpunkt auf die referentielle Integrität.\r\nVerteilte Objekte an der Stelle von verteilten Texten waren lieber angesehen.","Die folgenden drei Hauptmerkmale sorgten für den Erfolg des WWW:\r\n- Dezentralität\r\n- Evolvierbarkeit\r\n- Offenheit\r\nDas WWW wurde dennoch ein Erfolg, da die verschiedenen Technologien (HTTP, HTML, URI) sich unabhängig voneinander entwickeln können.","Um eine Verhinderung von 'broken links' sicherzustellen, müsste man die referentielle Integrität wahren. Analog zu Datenbanken mit Fremdschlüsseln können Datensätze, die einen Fremdschlüssel aufweisen nur gespeichert werden, wenn der Wert des Schlüssels in der referenzierten Tabelle existiert. Also es müsste sicher gestellt werden, dass diese Website existiert. Dazu braucht es Kontrollmechanismen.\r\nDer zu zahlende Preis wäre eine zentrale Kontrolle und Geschlossenheit."]
      },
      "references": [
        ""
      ],
      "solutionpage": ""
    },
    "1.2": {
      "content": {"questions": ["Sie bekommen im Browser den HTTP Status Code 200. Was bedeutet das?","Sie bekommen im Browser den HTTP Status Code 301. Was hat das zu bedeuten?","Sie bekommen im Browser den HTTP Status Code 400. Was hat das zu bedeuten? Was können Sie dagegen tun?","Sie bekommen im Browser den HTTP Status Code 403. Was hat das zu bedeuten? Was können Sie dagegen tun?","In einer Webanwendung benötigen Sie eine OPTIONS-Anfrage, die die Optionen des Servers vor dem eigentlichen Zugriff erfragen soll. Aus Performanzgründen soll die Abfrage jedoch cacheable sein. Wie könnten Sie dafür eine Lösung angehen?"],
        "answers":["Beim HTTP Status Code 200 handelt es sich um den Bestätigungscode. Die Verbindung war erfolgreich. OK.",
          "Der HTTP Status Code 301 bedeutet, dass der Client eine Ressource angefordert hat, die nicht mehr unter dieser Adresse erreichbar ist. Die Adresse der gewünschten Ressource wurde dauerhaft geändert.",
          "Der HTTP Status Code 400 bedeutet, dass eine fehlerhafte Anfrage vom Client verschickt wurde. Client Error (Bad Request). Der Server kann eine solche Anfrage wie vom Client gestellt nicht verarbeiten. Da der Bad Request auch durch einfache syntaktische Fehler entstehen kann, sollte der Client seine Anfrage auf syntaktische Korrektheit prüfen, bevor er eine erneute Anfrage schickt. Falls immernoch ein Bad Request vorliegt, sollte der Client Anfragen schicken, die korrekt sind. Dabei gilt es einen korrekten Request-Nachrichten-Rahmen und eine korrekt gewählte Route zu wählen.",
          "Code 403: Fehlende Zugriffsberechtigung. Dem Client fehlt die Erlaubnis, auf die gewünschte Ressource zuzugreifen. Der Client ist nicht autorisiert und deshalb wird statt der gewünschte Ressource ein HTTP Status Code 403 zurückgegeben.",
          "OPTIONS ist nicht Cashable. Eine Lösung müsste lokal implementiert werden, damit OPTIONS-Anfragen cashable sein können. D.h. dass Diese Anfragen zwischengespeichert werden müssen."]
      },
      "references": [
        ""
      ],
      "solutionpage": ""
    },
    "1.3": {
      "content": {"questions": ["Was ist HTML?","Wie kann man eine geschachtelte geordnete Liste der Schachtelungstiefe 3 erzeugen?","Wie ist eine HTML-Tabelle aufgebaut?","Welche Konventionen sollte man bei Pfaden und Dateinamen beachten?","Wie baut man in HTML ein Menü?","Welche Attribute sollte man bei Bildern wie verwenden?"],
        "answers": ["HTML ist eine Markup-Language. Sie ist textbasiert und dient der Strukturierung von Dokumenten. Mit HTML erstellt man das Skelett einer Website. HTML Syntax erkennt man vor allem an der Verwendung von <> also den öffnenden und schließenden Markups.\r\nHTML ist kontextfrei (Chomsky 2).\r\nBei HTML unterscheidet man zwischen Block und Inline Dokumenten.",
          "<ol>\r\n\t<li>Coffee</li>\n\t<li>Tea\n\t\t<ol>\n\t\t\t<li>Black tea\n\t\t\t\t<ol>\n\t\t\t\t\t<li>very black tea</li>\n\t\t\t\t</ol>\n\t\t\t</li>\n\t\t\t<li>Green tea</li>\n\t\t</ol>\n\t</li>\n\t<li>Milk</li>\n</ol>",
          "<table>\n<tr>\n\t<th>Vorname</th>\n\t<th>Nachname</th>\n\t<th>Alter</th>\n</tr>\n<tr>\n\t<td>Bojan</td>\n\t<td>Savic</td>\n\t<td>20</td>\n</tr>\n<tr>\n\t<td>Tim</td>\n\t<td>Falter</td>\n\t<td>27</td>\n</tr>\n</table>\n\nDer table Tag deklariert die Tabelle. Jede Zeile wird mit einem tr Tag (tr: table row) definiert. Jeder Header pro Spalte wird mit einem th Tag definiert. Ansonsten wird jeder Zellenblock in einer Zeile mit dem td Tag definiert.",
          "Best Practice für Pfade: Man sollte möglichst relative Pfade verwenden, um unabhängig von der Plattform (eigener PC als localhost, öffentliche Domäne) die Pfade korrekt wiederzugeben.\nAnsonsten sind bei Dateinamen die üblichen Konventionen zu beachten:\n\n- Html Dokumente enden mit '.html'\n- Keine Leerzeichen\n- Nur Alphanumerische Zeichen (außer _ ~ -)\n- Am besten nur klein geschrieben",
          "In HTML kann mit Hilfe des <nav>-Tags und Listen ein Menü erstellt werden:\n\n<nav><h1>Navigation</h1>\n    <ul>\n        <li><a href=\"#\">Erster Eintrag</a></li>\n        <ul>\n            <li><a href=\"#\">Erster tiefer Eintrag</a></li>\n            <li><a href=\"#\">Zweiter tiefer Eintrag</a></li>\n        </ul>\n        <li><a href=\"#\">Zweiter Eintrag</a>\n        </li>\n    </ul>\n</nav>",
          "Bei <img>-Tags sollten zwei Attribute grundsätzlich angegeben werden:\n-src\n-alt (optional)\nsrc=\\'[path]\\' gibt den Pfad der zu ladenden Bild Ressource an. alt=\\'some text\\' liefert einen alternativen Text, der das Bild beschreibt, falls das Bild nicht geladen werden kann. Zudem gibt es noch weitere Attribute wie height oder width. Diese sollten jedoch lieber in style tags oder in einem externen stylesheet vermerkt werden.\nz.B. kann das folgendermaßen aussehen\n<style>\n img{\n  width: 20%;\n  height: 20%;\n }\n</style>\nFür Breite und Höhe kann man z.B. folgende zwei Einheiten verwenden:\n- px: Dies steht für die totale Anzahl an Pixeln\n- %: Dies gibt eine relative Größe, die abhängig von der gesamten Größe des Parent-Elementes ist."]
      },
      "references": [
        "W3School vertikales Menu mit CSS:\r\n\nhttps://www.w3schools.com/howto/howto_css_vertical_menu.asp"
      ],
      "solutionpage": "./Homepage/U1/1_3.html"
    },
    "1.4": {
      "content": {"questions": ["Mit welchem HTML-Code (ohne CSS, nur mit HTML-Tags) kann man diesen Wireframe exakt nachbilden?"],
        "answers": ["Für Lösung auf den Visit-Solution Button klicken.\n\n<!DOCTYPE html>\n<html>\n<body>\n<h1>Übung 1.2: Inventors of the Web</h1>\n<div>\n    <ul>\n        <li> <mark><b><u>Tim Berners Lee:</u></b></mark> WWW, HTTP, HTML, URI</li>\n        <li><b>Hakom Lie and Bert Bos:</b> CSS</li>\n        <li><b>Brendan Eich:</b> JavaScript</li>\n    </ul>\n</div>\n<hr>\n<div>\n    <br>\n    <h2>Inventors of the WWW</h2>\n    <table width=\"100%\" border=\"8px\">\n        <tr>\n            <th colspan=\"4\">Inventors of the WWW</th>\n        </tr>\n        <tr>\n            <th><center>WWW</center></th>\n            <th><center>HTML</center></th>\n            <th><center>CSS</center></th>\n            <th><center>JavaScript</center></th>\n        </tr>\n        <tr>\n            <td><center><mark>Tim Berners-Lee</mark></center></td>\n            <td><center><mark>Tim Berners-Lee</mark></center></td>\n            <td><center>Hakom Lie and Bert Bos</center></td>\n            <td><center>Brendan Eich</center></td>\n        </tr>\n    </table>\n</div>\n<br>\n<hr>\n<article style=\"width:50%\">\n    <h1><center>Inventors of the WWW</center></h1>\n    <hr>\n    <table style=\"width:100%\">\n        <tr>\n            <td><center><b>HTML</b></center></td>\n            <td><b>|</b></td>\n            <td><center><b>JavaScript</b></center></td>\n        </tr>\n        <tr>\n            <td><center><img src=\"https://kaul.inf.h-brs.de/we/assets/img/tbl.jpg\" alt=\"A picture of Tim Berners-Lee\" height=\"210px\"></center></td>\n            <td><b>|</b></td>\n            <td><center><img src=\"https://kaul.inf.h-brs.de/we/assets/img/eich.jpg\" alt=\"A picture of Brendan Eich\" height=\"210px\"></center></td>\n        </tr>\n        <tr>\n            <td><center><mark>Tim Berners-Lee</mark></center></td>\n            <td><center><b>|</b></center></td>\n            <td><center>Brendan Eich</center></td>\n        </tr>\n    </table>\n</article>\n<br>\n<hr>\n<br>\n</body>\n</html>\n"]
      },
      "references": [""],
      "solutionpage": "./Homepage/U1/1_4.html"
    }
  },
  "Übung 2": {
    "2.1": {
      "content": {"questions": ["Berechnen Sie die Spezifität folgender CSS-Selektoren:\n\n    1. div div div:focus .inner\n    2. h1 + div.main\n    3. div a:link[href*='h-brs']\n    4. nav > a:hover::before\n    5. ul#primary-nav li.active","Rechnen Sie folgende RGB-Werte in HSL-Werte um:\n\n    1. #ffffff\n    2. #000\n    3. #ab0978\n    4. rgb(127,255,33)\n    5. rgba(255,127,33,0.8)"],
        "answers": ["1. 023 ((:focus+.inner),3 divs )\n2. 012(.main, (div+h1))\n3. 022 ((:link+[ ]),(div+a) )\n4. 013 (:hover, Rest)\n5. 112 (#id, .active, (ul+li))","1.hsl(0,0%,100%)\n2.hsl(0,0%,0%)\n3.hsl(318.9,90%,35.3%)\n4.hsl(94.6,100%,56.5%)\n5.hsl(25.4,100%,56.5%,0.8)"]
      },
      "references": [
        "Farbkonverter-Tool:\n\nhttps://www.rapidtables.com/convert/color/rgb-to-hsl.html"
      ],
      "solutionpage": ""
    },
    "2.2": {
      "content": {"questions": ["Schauen Sie sich folgendes Video an und bauen Sie das dynamische Verhalten exakt nach (nur mit HTML und CSS, ohne JavaScript): ","Schauen Sie sich folgendes Video an und bauen Sie das dynamische Verhalten exakt nach (nur mit HTML und CSS, ohne JavaScript): "],
        "answers": ["<!DOCTYPE html>\n<html lang=\"de\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>CSS Positionierung</title>\n    <style>\n        .header{\n            position: sticky;\n            top: 0;\n            z-index: 1;\n            box-sizing: border-box;\n            border-style: solid;\n            border-width:2px;\n            width: calc(100%- 1em);\n            font-weight: bolder;\n            font-size: 30px;\n            padding-bottom: 10px;\n            padding-top: 10px;\n\n        }\n        #h1{\n            z-index: 1;\n            background-color: rgba(255,255,255,0.95);\n        }\n        #h2 {\n            z-index: 2;\n            background-color: rgba(255,255,255,0.96);\n        }\n        #h3{\n            z-index: 3;\n            background-color: rgba(255,255,255,0.97);\n        }\n        p{\n            background-color: #ffebcd;\n            position: relative;\n            width: 100%;\n        }\n    </style>\n</head>\n<body>\n<div class=\"header\" id=\"h1\">Erste Überschrift</div>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<div class=\"header\" id=\"h2\">Zweite Überschrift</div>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<div class=\"header\" id=\"h3\">Dritte Überschrift</div>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n</body>\n</html>",
          "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Übung 2</title>\n    <style>\n        #container{\n            border-style: solid;\n            border-width: 2px;\n            padding: 6px;\n        }\n        .imgHBRS{\n            position: relative;\n            width: 100%;\n        }\n        input[type=\"checkbox\"] ~ #container .imgHBRS {\n            visibility: hidden;\n        }\n        input[type=\"checkbox\"]:checked ~ #container .imgHBRS {\n            visibility: visible;\n        }\n    </style>\n</head>\n<body>\n<h1>Übung 2.2</h1>\n\n\n<input type=\"checkbox\" id=\"checkImg\">\n<label for=\"checkImg\"> hide and show via checkbox</label>\n<div id=\"container\">\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/a/a4/Hochschule_Bonn-Rhein-Sieg_Wolfgang_G%C3%B6ddertz_Induktion.jpg\" class=\"imgHBRS\">\n</div>\n\n\n</body>\n</html>\n"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U2/2_2-Vermittler.html"
    },
    "2.3": {
      "content": {"questions": ["Gegeben ist folgendes Wireframe. Was war in der Lösung dieser Aufgabe die größte Schwierigkeit und wie haben Sie diese gelöst?"],
        "answers": ["Das schwierigste ist das Alignment korrekt, wie im Bild vorgegeben, darzustellen. Um das Problem zu lösen kann man ein grid mit zwei Spalten erstellen.\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Survey Form</title>\n    <style>\n        title{\n            font-family: Arial;\n        }\n        body{\n            margin: 0px;\n            font-family: Railway;\n        }\n        #app{\n            background-color: #b2d6d1;\n            height: 100vh;\n        }\n        h1{\n            font-family: Arial;\n            text-align: center;\n        }\n        .centerCtr{\n            font-family: Arial;\n            border-radius: 8px;\n            position: relative;\n            background-color: white;\n            width: 90%;\n            left: 5%;\n            height: 60%;\n        }\n        .input{\n            text-align: center;\n            display: grid;\n            grid-template-columns: 50% 50%;\n            grid-template-rows: auto auto auto auto auto auto auto;\n            grid-gap: 10px;\n            padding: 10px;\n        }\n        .left {\n            text-align: end;\n            justify-self: auto;\n        }\n        .right {\n            text-align: start;\n            justify-self: auto;\n        }\n        .inputField{\n            border: 1px solid #00000050;\n            border-radius: 2px;\n            padding: 4px 2px 4px 5px;\n            width: 30%;\n        }\n        .inputRole{\n            border-radius: 2px;\n            border: 1px solid #00000050;\n            background-color: #efefef;\n            width: 130px;\n        }\n    </style>\n</head>\n<body>\n<div id=\"app\">\n    <br>\n    <h1>Survey Form</h1>\n    <div class=\"centerCtr\">\n        <div class=\"grid-container\">\n            <br><center>Let us know how we can improve freeCodeCamp</center>\n            <br>\n            <div class=\"input\">\n                <div class=\"left\"><label>Name:</label></div>\n                <div class=\"right\"><input type=\"text\" name=\"name\" placeholder=\"Enter your name\" class=\"inputField\"></div>\n\n                <div class=\"left\"><label>Email:</label></div>\n                <div class=\"right\"><input type=\"email\" name=\"email\" placeholder=\"Enter your Email\" class=\"inputField\"></div>\n\n                <div class=\"left\"><label>Age:</label></div>\n                <div class=\"right\"><input type=\"number\" name=\"age\" placeholder=\"Age\" class=\"inputField\"></div>\n\n                <div class=\"left\">\n                    <label>Which option best describes your current role?</label>\n                </div>\n                <div class=\"right\">\n                    <select name=\"role\" class=\"inputRole\">\n                        <option value=\"student\">Student</option>\n                        <option value=\"opt2\">hilflos</option>\n                    </select>\n                </div>\n                <div class=\"left\"><label>How likely is that you would recommend<br>freeCodeCamp to a friend</label></div>\n                <div class=\"right\">\n                    <input type=\"radio\" name=\"rating\"><label>Definitely</label><br>\n                    <input type=\"radio\" name=\"rating\"><label>Maybe</label><br>\n                    <input type=\"radio\" name=\"rating\"><label>Not sure</label><br>\n                </div>\n\n                <div class=\"left\"><br><label>What do you like most in FCC:</label></div>\n                <div class=\"right\"><br>\n                    <select name=\"ffc\" class=\"inputRole\">\n                        <option value=\"student\">Select an option</option>\n                        <option value=\"opt2\">uhhm sry, didn't visit, yet.</option>\n                    </select>\n                </div>\n\n                <div class=\"left\"> <label>Things that should be improved in the future<br>(Check all that apply):</label></div>\n                <div class=\"right\">\n                    <input type=\"checkbox\" name=\"frontend\"> <label>Front-end Projects</label><br>\n                    <input type=\"checkbox\" name=\"backend\"> <label>Back-end Projects</label><br>\n                    <input type=\"checkbox\" name=\"visualization\"> <label>Data visualization</label><br>\n                </div>\n                <br>\n            </div>\n        </div>\n    </div>\n</div>\n</body>\n</html>\n"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U2/2_3.html"
    }
  },
  "Übung 3": {
    "3.1": {
      "content": {"questions": ["Implementieren Sie ausschließlich mit HTML und CSS Flexbox folgendes responsive Webdesign nach der Desktop-First-Strategie!"],
        "answers": ["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>3-1: Flexbox responsive</title>\n    <style>\n        body{\n            display: flex;\n            justify-content: space-around;\n            flex-direction: column;\n            flex-wrap: wrap;\n            justify-content: center;\n            text-align: center;\n        }\n        .header{\n            order: 1;\n            background-color: #864747;\n        }\n        .secondRow{\n            display: flex;\n            order: 2;\n            height: 700px;\n        }\n        .leftBar{\n            order: 2;\n            flex: 15%;\n            background-color: #0d7322;\n        }\n        .rightBar{\n            order: 4;\n            flex: 15%;\n            background-color: #8e21ab;\n        }\n        .main-middle{\n            order: 3;\n            flex: 70%;\n            background-color: #1b4075;\n        }\n        /*Tablet  between 600 and 992px*/\n        @media screen and (max-width: 992px) {\n            .secondRow{\n                flex-wrap: wrap;\n            }\n            .leftBar, .main-middle{\n                flex: 50%;\n            }\n        }\n        /*Mobile between 0-600px */\n        @media screen and (max-width: 600px) {\n            .secondRow{\n                flex-wrap: wrap;\n            }\n            .leftBar, .main-middle,.rightBar{\n                flex: 100%;\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <h1>Flexbox-Champion; Desktop-First</h1>\n</div>\n\n<div class=\"secondRow\">\n    <div class=\"leftBar\">\n        <h1>Lefty</h1>\n    </div>\n    <div class=\"main-middle\">\n        <h1>main</h1>\n    </div>\n    <div class=\"rightBar\">\n        <h1>Righty</h1>\n    </div>\n</div>\n</body>\n</html>"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U3/3_1.html"
    },
    "3.2": {
      "content": {"questions": ["Implementieren Sie das gleiche responsive Webdesign wie in Aufgabe 3.1 allerdings mit Grid und der Mobile-First-Strategie! Vermeiden Sie diesmal außerdem das Erscheinen von Scrollbars."],
        "answers": ["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>3-2: Grid responsive</title>\n    <style>\n        body{\n            display:grid;\n            grid-template-rows: 20% 1fr;\n            grid-template-columns: 1fr;\n            text-align: center;\n            overflow-y: scroll;\n        }\n        body::-webkit-scrollbar {\n            display: none;\n        }\n        body {\n            -ms-overflow-style: none;   /* IE and Edge */\n            scrollbar-width: none;      /* Firefox */\n        }\n        .header{\n            background-color: #864747;\n            order: 0;\n        }\n        .secondRow{\n            display: grid;\n            order: 1;\n            grid-template-rows: repeat(3, 300px);\n            grid-template-columns: 1fr;\n        }\n        .main-middle{\n            background-color: #1b4075;\n        }\n        .rightBar{\n            background-color: #8e21ab;\n        }\n        .leftBar{\n            background-color: #0d7322;\n        }\n\n        /*Tablet*/\n        @media screen and (min-width: 600px) {\n            .secondRow{\n                grid-template-columns: 1fr 1fr;\n                grid-template-rows: 600px 1fr;\n            }\n            .rightBar{\n                grid-row: 2;\n                grid-column: 1 / span 2;\n            }\n        }\n        /*Desktop*/\n        @media screen and (min-width: 992px) {\n            .secondRow{\n                grid-template-columns: 1fr 60% 1fr;\n                grid-template-rows: 700px;\n            }\n            .rightBar{\n                grid-column: 3;\n                grid-row: 1;\n            }\n            .leftBar{\n                grid-column: 1;\n            }\n        }\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <h1>Grid-Champion; Mobile-First</h1>\n</div>\n\n<div class=\"secondRow\">\n    <div class=\"leftBar\">\n        <h1>Lefty</h1>\n    </div>\n    <div class=\"main-middle\">\n        <h1>main</h1>\n    </div>\n    <div class=\"rightBar\">\n        <h1>Righty</h1>\n    </div>\n</div>\n</body>\n</html>"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U3/3_2.html"
    },
    "3.3": {
      "content": {"questions": ["Implementieren Sie folgende Landing Page responsiv mit Grid Layout. Vermeiden Sie außerdem das Erscheinen von Scrollbars so weit wie möglich."],
        "answers": ["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>JavaScript is guhd</title>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Teko\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Six+Caps\">\n    <style>\n        body{\n            text-align: center;\n            font-family: Arial;\n            display: grid;\n            height: 1000px;\n            grid-template-rows: 7% 73% 20%;\n            grid-template-columns: repeat(10, 10%);\n            overflow-y: scroll;\n        }\n        body::-webkit-scrollbar {\n            display: none;\n        }\n        body {\n            -ms-overflow-style: none;  /* IE and Edge */\n            scrollbar-width: none;  /* Firefox */\n        }\n        .header{\n            background-color: #404040;\n            color: white;\n            order: 0;\n            grid-row: 1;\n            grid-column: 1 / span 10;\n            display: grid;\n            grid-template-columns: 3fr repeat(4, 1fr) 3fr;\n            grid-template-rows: 100%;\n            grid-gap: 5px;\n        }\n        .hDiv{\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n        }\n        .hDiv:hover{\n            background-color: #7a7a7a;\n        }\n        #hDiv1{\n            grid-row: 1;\n            grid-column: 2;\n        }\n        #hDiv2{\n            grid-row: 1;\n            grid-column: 3;\n        }\n        #hDiv3{\n            grid-row: 1;\n            grid-column: 4;\n        }\n        #hDiv4{\n            grid-row: 1;\n            grid-column: 5;\n        }\n        .main{\n            background-color: #f8f3eb;\n            order:1;\n            grid-row: 2;\n            grid-column: 1 / span 10;\n            display: grid;\n            grid-template-rows: repeat(10, 1fr);\n            grid-template-columns: 50% 50%;\n        }\n        .headerMain{\n            grid-row: 1;\n            grid-column: 1 / span 2;\n        }\n        .BiigImgDiv{\n            grid-row: 2 / span 8;\n            grid-column: 1;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        .BiigImg{\n            max-height: 100%;\n            max-width: 65%;\n            border: 2px black solid;\n            border-radius: 1%;\n        }\n        .pMain{\n            grid-column: 2;\n            font-weight: bolder;\n            font-size: 17px;\n        }\n        #p1{grid-row: 3;}\n        #p2{grid-row: 4;}\n        #p3{grid-row: 5;}\n        #orderBtnDiv{grid-row: 6;}\n        .footer{\n            background-color: #122137;\n            order: 2;\n            grid-row: 3;\n            grid-column: 1 / span 10;\n            color: white;\n        }\n        .orangeBtn{\n            color: white;\n            background-color: #ff933c;\n            border:none;\n            border-radius: 4px;\n            padding: 10px 40px 10px 40px;\n            font-size: 18px;\n            font-weight: bold;\n            font-family: \"Trebuchet MS\", Helvetica, sans-serif\n        }\n        .orangeBtn:hover{\n            background-color: #f6a25f;\n        }\n        .orangeBtn:active{\n            background-color: #d06813;\n        }\n        #fBtn{\n            padding: 10px 100px 10px 100px;\n        }\n        /*Mobile*/\n        @media only screen and (max-width: 680px) {\n            .header{\n                grid-template-columns: repeat(4, 1fr);\n            }\n            #hDiv1{grid-column: 1;}\n            #hDiv2{grid-column: 2;}\n            #hDiv3{grid-column: 3;}\n            #hDiv4{grid-column: 4;}\n            .main{\n                grid-template-rows: repeat(14,1fr);\n                grid-template-columns: 100%;\n            }\n            .pMain{grid-column: 1;}\n            #p1{grid-row: 10;}\n            #p2{grid-row: 11;}\n            #p3{grid-row: 12;}\n            #orderBtnDiv{grid-row: 13;}\n        }\n\n    </style>\n</head>\n<body>\n<div class=\"header\">\n    <div class=\"hDiv\" id=\"hDiv1\">The book series</div>\n    <div class=\"hDiv\" id=\"hDiv2\">Testimonials</div>\n    <div class=\"hDiv\" id=\"hDiv3\">The Author</div>\n    <div class=\"hDiv\" id=\"hDiv4\">Free resources</div>\n</div>\n<div class=\"main\">\n    <h1 class=\"headerMain\">You don't know JavaScript</h1>\n    <div class=\"BiigImgDiv\">\n        <img src=\"https://kaul.inf.h-brs.de/we/assets/img/landing-img.png\" alt=\"Funny img of JS Book\" class=\"BiigImg\">\n    </div>\n    <p class=\"pMain\" id=\"p1\">Don't just drift through Javascript.</p>\n    <p class=\"pMain\" id=\"p2\">Understand how Javascript works</p>\n    <p class=\"pMain\" id=\"p3\">Start your journey through the bumpy side of Javascript</p>\n    <div class=\"pMain\" id=\"orderBtnDiv\">\n        <button class=\"orangeBtn\" id=\"orderBtn\">ORDER YOUR COPY NOW</button>\n    </div>\n</div>\n<div class=\"footer\">\n    <br><br><br>\n    <p class=\"fP\">The first ebook in the book series is absolutely free.</p>\n    <button class=\"orangeBtn\" id=\"fBtn\">FIND OUT MORE ABOUT THIS OFFER</button>\n</div>\n</body>\n</html>"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U3/3_3.html"
    }
  },
  "Übung 4": {
    "4.1": {
      "content": {"questions": ["Schreiben Sie eine Funktion identity(), die ein Argument als Parameter entgegen nimmt und dieses als Ergebnis zurück gibt.","Schreiben Sie eine Funktion identity_function(), die ein Argument als Parameter entgegen nimmt und eine Funktion zurück gibt, die dieses Argument zurück gibt.","Schreiben Sie zwei binäre Funktionen add und mul, die Summe und Produkt berechnen.","Schreiben Sie eine Addier-Funktion addf(), so dass addf(x)(y) genau x + y zurück gibt. (Es haben also zwei Funktionsaufrufe zu erfolgen. addf(x) liefert eine Funktion, die auf y angewandt wird.)","Schreiben Sie eine Funktion applyf(), die aus einer binären Funktion wie add(x,y) eine Funktion addfberechnet, die mit zwei Aufrufen das gleiche Ergebnis liefert, z.B. addf = applyf(add); addf(x)(y) soll add(x,y) liefern. Entsprechend applyf(mul)(5)(6) soll 30 liefern, wenn mul die binäre Multiplikation ist."],
        "answers": ["function identity(x){\n    return x;\n}","function identity_function(x){\n    return function(){\n        return x;\n    }\n}","function add(x,y){\n    return x+y;\n}\n\nfunction mul(x,y){\n    return x*y;\n}","function addf(x){\n    return function(y){\n        return x+y;\n    }\n}","function applyf(op){\n    return function(x){\n        return function (y){\n            return op(x,y);\n        }\n    }\n}"]
      },
      "references": [
        ""
      ],
      "solutionpage": ""
    },
    "4.2": {
      "content": {"questions": ["Schreiben Sie die Prototypen Person und Auto in JavaScript, so dass jede Person weiß, welche Autos sie besitzt. Schreiben Sie eine Funktion conflict(), die feststellt, ob ein Auto von mehr als einer Person besessen wird."],
        "answers": ["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>4-2: Objekte</title>\n</head>\n<script>\n    var persons = [];           //When initiating a person, put it in this list.\n\n    function Person(name) {     //Person proto\n        var person = {          //maybe change to let\n            name: name,\n            cars: []\n        };\n        person.addCar = function(car) {\n            person.cars.push(car);\n        };\n        persons.push(person);\n        return person;\n    }\n    function Car(marke, id) {   // Auto prototype\n        var car = {\n            marke: marke,\n            id: id\n        };\n        return car;\n    }\n    function conflict() {\n        var return_statement = false;\n        var visited_cars = [];\n        persons.forEach(function(p){  // go through each person\n            p.cars.forEach(function(c){  // and each car of a person\n                    if(visited_cars.includes(c)) {      //if the current car is inside the visited then we have a conflict.\n                        return_statement = true;\n                        return;                        //So we return true.\n                    }\n                    else{\n                        visited_cars.push(c);         //If it's a new car then put it in the visited array.\n                    }\n                    if(return_statement){\n                        return; //return so that we break out of the middle function\n                    }\n                }\n            );\n        });\n        return return_statement;\n    }\n    //Test-region\n    var p1 = new Person(\"Tim\");\n    const p2 = new Person(\"Daniel\",[]);\n    const car1 = new Car(\"Ford\",2020);\n    const car2 = new Car(\"Nissan\",69420);\n    p1.addCar(car1);\n    p2.addCar(car2);\n    console.log(p1.name+\" has this car:\", p1.cars);\n    console.log(\"print Persons:\", persons);\n    console.log(\"James, do we have any conflicts?\", conflict());\n\n    //conflict should drop yes\n    p2.addCar(car1);\n    console.log(\"James, how about now?\", conflict());\n\n</script>\n<style>\n    body{\n        text-align: center;\n        background-color: darkgrey;\n    }\n</style>\n<body>\n<h1>Welcome to 4.2</h1>\n<p>Take a look to the console my friend</p>\n</body>\n</html>"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U4/4_2.html"
    },
    "4.3": {
      "content": {"questions": ["Schreiben Sie im Browser die Fibonacci-Funktion in JavaScript und geben Sie die ersten 2000 Fibonacci-Zahlen 0,1,1,2,3,5,8,13,... auf der Konsole mit console.log() aus. Achten Sie auf Performanz: Berechnen Sie jeden Fibonacci-Wert nur einmal. Speichern Sie zu diesem Zweck jede bereits berechnete Fibonacci-Zahl in einer Tabelle.","Was ist die größte Fibonacci-Zahl, die sich noch als Integer sicher speichern lässt (Number.MAX_SAFE_INTEGER)? Die wievielte Fibonacci-Zahl in der Fibonacci-Folge ist das? ","Was ist die größte Fibonacci-Zahl, die sich noch als Number speichern lässt (Number.MAX_VALUE)? Die wievielte Fibonacci-Zahl in der Fibonacci-Folge ist das (d.h. welche Stelle in der Fibonacci-Folge)? ","Wechseln Sie zu BigInt, um alle 2000 Fibonacci-Zahlen korrekt anzuzeigen. Geben Sie hier HTML- und JavaScript-Code zusammen ein:","Optional: Was ist die größte Fibonacci-Zahl, die Sie mit BigInt korrekt berechnet haben? An welcher Stelle in der Fibonacci-Folge steht diese?"],
        "answers": ["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>4-3: Fibonacci</title>\n    <style>\n        h1{\n            text-align: center;\n        }\n        body{\n            background-color: darkgrey;\n        }\n    </style>\n</head>\n<body>\n    <h1>Give me some Fibonacci numbers.</h1>\n\n    <script>\n        function fibonacciRec(num){        //Recursive  Time complexity O(2^n)  space complexity O(n)\n            if (num <= 1) return 1;\n            return fibonacci(num - 1) + fibonacci(num - 2);\n        }\n        function fibonacci(n){             //Iterative, better performance O(n)  space complexity: constant\n            var i;\n            var a =0, b=1, tmp;\n            console.log(b);\n            for(i =0; i < n-1; i++){\n                tmp = b;\n                b = a+b;\n                a = tmp;\n                console.log(b);\n            }\n        }\n        function fibonacciWithTable(n){\n            var i;\n            var a =0, b=1, tmp;\n            var body = document.body,\n                tbl  = document.createElement('table');\n            tbl.style.width  = '20%';\n            tbl.style.border = '1px solid black';\n            var tr = tbl.insertRow();\n            var td = tr.insertCell();\n            td.appendChild(document.createTextNode('Fibonacci'));\n            td.style.border = '1px solid black';\n            var tr = tbl.insertRow();\n            var td = tr.insertCell();\n            var td2 = tr.insertCell();\n            td.appendChild(document.createTextNode('1'));\n            td2.appendChild(document.createTextNode('1'));\n            td.style.border = '1px solid black';\n            var ctr = 2;\n            for(i =0; i < n-1; i++){\n                tmp = Number(b);\n                b = Number(a+b);\n                a = Number(tmp);\n                var tr = tbl.insertRow();\n                var td = tr.insertCell();\n                var td2 = tr.insertCell();\n                td.appendChild(document.createTextNode(''+b));  //plaintext\n                td2.appendChild(document.createTextNode(''+ctr));  //plaintext\n                td.style.border = '1px solid black';\n                ctr++;\n            }\n            body.appendChild(tbl);\n        }\n        fibonacciWithTable(2000);\n    </script>\n</body>\n</html>\n",
          "Höchste genaue Int-Zahl\n8944394323791464\nPosition: 78","MAX_VALUE: 1.3069892237633987e+308 an der Stelle 1476",
          "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>4-3: Fibonacci Big Int</title>\n    <style>\n        h1{\n            text-align: center;\n        }\n        body{\n            background-color: darkgrey;\n        }\n    </style>\n</head>\n<body>\n<h1>Give me more moooore Fibonacci numbers.</h1>\n\n<script>\n    function fibonacciRec(num){        //Recursive  Time complexity O(2^n)  space complexity O(n)\n        if (num <= 1) return 1;\n        return fibonacci(num - 1) + fibonacci(num - 2);\n    }\n    function fibonacci(n){             //Iterative, better performance O(n)  space complexity: constant\n        var i;\n        var a =0, b=1, tmp;\n        console.log(b);\n        for(i =0; i < n-1; i++){\n            tmp = b;\n            b = a+b;\n            a = tmp;\n            console.log(b);\n        }\n    }\n    function fibonacciWithTable(n){\n        var i;\n        var a =0, b=1, tmp;\n        var body = document.body,\n            tbl  = document.createElement('table');\n        tbl.style.width  = '20%';\n        tbl.style.border = '1px solid black';\n        var tr = tbl.insertRow();\n        var td = tr.insertCell();\n        td.appendChild(document.createTextNode('Fibonacci'));\n        td.style.border = '1px solid black';\n        var tr = tbl.insertRow();\n        var td = tr.insertCell();\n        td.appendChild(document.createTextNode('1'));\n        td.style.border = '1px solid black';\n\n        for(i =0; i < n-1; i++){\n            tmp = BigInt(b);\n            b = BigInt(a+b);\n            a = BigInt(tmp);\n            var tr = tbl.insertRow();\n            var td = tr.insertCell();\n            td.appendChild(document.createTextNode(''+b));\n            td.style.border = '1px solid black';\n        }\n        body.appendChild(tbl);\n    }\n    fibonacciWithTable(2000);\n</script>\n</body>\n</html>\n",
          "4224696333392304878706725602341482782579852840250681098010280137314308584370130707224123599639141511088446087538909603607640194711643596029271983312598737326253555802606991585915229492453904998722256795316982874482472992263901833716778060607011615497886719879858311468870876264597369086722884023654422295243347964480139515349562972087652656069529806499841977448720155612802665404554171717881930324025204312082516817125\n\nAn der 2000. Stelle"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U4/4_3-Vermittler.html"
    },
    "4.4": {
      "content": {"questions": ["In jedem Projekt fallen Aufgaben (Tasks) an. Zwischen den Aufgaben gibt es paarweise Abhängigkeiten. Z.B. kann Task2 von Task1 abhängen, d.h. erst muss Task1 fertig sein, bevor Task2 starten kann, weil es dessen Ergebnisse benötigt. Tasks können auch unabhängig voneinander sein und parallel ablaufen. In JavaScript können Sie die Abhängigkeiten in Arrays codieren, z.B. kann man bei [ [\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"] ] nicht prüfen, ohne vorher gegessen zu haben. Transitive Abhängigkeiten müssen also berücksichtigt werden.\n\nSchreiben Sie in JavaScript eine Funktion topsort(), die eine topologische Sortierung berechnet. Achten Sie auf Performanz. Berechnen Sie die topologische Sortierung in linearer Zeit (Average Case).","Testen Sie Ihren JavaScript-Code. Verwenden Sie für Ihre Tests die Funktion console.assert. Geben Sie hier Ihre Tests ein:"],
        "answers": ["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>4-4: TopSort</title>\n    <script>\n        var dependencies = [[\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"]];\n        var nodeStrings = [\"schlafen\", \"studieren\", \"essen\", \"prüfen\"];\n        function arrayAlreadyHasArray(arr, subarr){ //To check if Array is inside 2d array.\n            for(var i = 0; i<arr.length; i++){\n                let checker = false;\n                for(var j = 0; j<arr[i].length; j++){\n                    if(arr[i][j] === subarr[j]){\n                        checker = true;\n                    } else {\n                        checker = false;\n                        break;\n                    }\n                }\n                if (checker){\n                    return true;\n                }\n            }\n            return false;\n        }\n        function Node(name, edgeNodes){\n            var nodeObject = {\n                name: name,\n                edges: [],\n                vorgaenger: 0\n            }\n            nodeObject.addEdge = function(edge){\n                nodeObject.edges.push(edge);\n                if(nodeObject.name === edge[1]){\n                    nodeObject.vorgaenger+=1;\n                }\n            }\n            nodeObject.rmvEdge = function(pEdge){\n                if(arrayAlreadyHasArray(nodeObject.edges,pEdge)){\n                    nodeObject.edges.filter(edge => edge!==pEdge);\n                    nodeObject.vorgaenger-=1;\n                }\n            }\n            if(edgeNodes){\n                edgeNodes.forEach(edgeNode =>{\n                    nodeObject.addEdge(edgeNode);\n                })\n            }\n            return nodeObject;\n        }\n        function Graph(nodesAsStrings,dependencies){    //Helper function to create the graph\n            var graph ={\n                nodes: []\n            }\n            nodesAsStrings.forEach(stringNode =>{   //Go through nodes\n                var currentNodesDeps = [];\n                dependencies.forEach(edge =>{       //Collects all edges of the current node\n                    if(edge.includes(stringNode)){\n                        currentNodesDeps.push(edge);\n                    }\n                });\n                var n = new Node(stringNode, currentNodesDeps);\n                graph.nodes.push(n);                       //Adds the current node to the graphs nodes\n            });\n            return graph;\n        }\n        function topsort(nodesAsStrings,dependencies){\n            var graph = new Graph(nodesAsStrings,dependencies);\n            var visited = [];\n            var q = []  //Vorgaenger = 0;\n\n            var i;\n            for(i=0; i < graph.nodes.length; i++){              //Look for Q (vorgänger =0)\n                if(graph.nodes[i].vorgaenger === 0){\n                    q.push(graph.nodes[i]);\n                    graph.nodes.splice(i,1);\n                    i-=1;\n                }\n            }\n            while(q.length > 0){\n                visited.push(q.pop());\n                var j;\n                for(j=0; j <graph.nodes.length; j++){\n                    graph.nodes[j].rmvEdge([visited[visited.length-1].name,graph.nodes[j].name]);\n                    if(graph.nodes[j].vorgaenger === 0){\n                        q.push(graph.nodes[j]);\n                        graph.nodes.splice(j,1);\n                        //j-=1;\n                    }\n                }\n            }\n            return visited;\n        }\n        var result =topsort(nodeStrings,dependencies);\n        console.log(\"Topsort: \",result);\n    </script>\n</head>\n<body>\n<h1>Look inside console.</h1>\n</body>\n</html>\n","var graph = new Graph(nodeStrings,dependencies);\n        console.assert(graph.nodes.length===4,{shouldBe: 4, errMsg: \"You did sth wrong. Graph should have 4 nodes,\"});\nvar node = new Node(\"Hallo\",[\"Hallo\",\"Stop\"]);\n        console.assert(node.name===\"Hallo\",{name: node.name,errMsg: \"Node name should be Hallo\"});\n        node.rmvEdge([\"Hallo\",\"Stop\"]);\nconsole.assert(node.vorgaenger===0,{name: node.edges,errMsg: \"Node should have no Vorgänger.\"});"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U4/4_4.html"
    }
  },
  "Übung 5": {
    "5.1": {
      "content": {"questions": ["Schreiben Sie eine ES6-Klasse Vorrang für Vorrangrelationen, z.B. new Vorrang([ [\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"] ]). Wählen Sie eine Implementierung, die universell gültig, also nicht nur für dieses Beispiel gilt. (Überlegen Sie sich, über welche Properties und Methoden eine solche Klasse verfügen sollte und wie TopSort hier hinein spielt. Topologische Iterierbarkeit und topologischer Generator sind jedoch Gegenstand der nächsten Übungen weiter unten auf diesem Übungsblatt und sollten für diese Aufgaben aufgespart werden.) "],
        "answers": ["class Vorrang{\n    constructor(dependencies) {\n        this.deps = dependencies;\n        this.elements = this.elementsset();\n\n    }\n    elementsset(){\n        var elementList = [];\n        this.deps.forEach((dep) =>{\n            dep.forEach((el) =>{\n                if(!elementList.includes(el)){\n                    elementList.push(el);\n                }\n            })\n        });\n        return elementList;\n    }\n}\nlet v1 = new Vorrang([[\"studieren\", \"schlafen\"],[\"essen\", \"prüfen\"]]);\nconsole.log(v1.elements);"]
      },
      "references": [
        ""
      ],
      "solutionpage": ""
    },
    "5.2": {
      "content": {"questions": ["Stellen Sie bei Ihrer Klasse aus der letzten Aufgabe die topologische Iterierbarkeit her (zunächst über das Iterationsprotokoll, ohne Generator, ohne yield).\n\nZum Beispiel soll dadurch folgender for ... of loop möglich werden, mit der die Elemente in topologischer Sortierung durchlaufen werden:"],
        "answers": ["class Vorrang{\n    constructor(dependencies) {\n        this.deps = dependencies;\n        this.elements = this.elementsset();\n\n    }\n    elementsset(){\n        var elementList = [];\n        this.deps.forEach((dep) =>{\n            dep.forEach((el) =>{\n                if(!elementList.includes(el)){\n                    elementList.push(el);\n                }\n            })\n        });\n        return elementList;\n    }\n    sorted(){\n        return topsort(this.deps,this.elements);\n    }\n    [Symbol.iterator](){\n        let i = 0;\n        const sorted = topsort(this.deps,this.elements);\n        return {\n            next(){\n                return{\n                    value: sorted[i++],\n                    done: i > sorted.length,\n                }\n            }\n        }\n    }\n}\nlet v1 = new Vorrang([[\"studieren\", \"schlafen\"],[\"essen\", \"prüfen\"]]);\n//console.log(v1.elements);\nconsole.log(v1.sorted());\nfor (const element of v1){\n    console.log(element);\n}\n\nfunction topsort(relations, elements){\n    var inDegree = calculate_inDegree(relations, elements);\n    //console.log(inDegree);\n    var next = [];\n    var sortierung = [];\n\n    for(key in inDegree){\n        if(inDegree[key].degree === 0){\n            next.push(key);\n        }\n    }\n\n    var k=1;\n\n    if(next.length === 0){\n        return -2;\n    }\n\n    do{\n        var current_item = next.pop();\n        sortierung.push(current_item);\n        k+=1;\n        inDegree[current_item].nachfolger.forEach(function(item){\n            if(inDegree[item].degree > 1){\n                inDegree[item].degree -= 1;\n            }else{\n                next.push(item);\n            }\n        })\n    } while(next.length !== 0);\n\n    //Zyklus erkannt\n    if(k !== elements.length+1){\n        return -1;\n    }\n    return sortierung;\n}\n\nfunction calculate_inDegree(relations, elements){\n    var inDegree = {};\n    elements.forEach(function(item){\n        inDegree[item] = {name: item, degree:0, nachfolger:[]};\n    })\n\n    relations.forEach(function(items){\n        inDegree[items[1]].degree +=1;\n        if(!inDegree[items[0]].nachfolger.includes(items[1])){\n            inDegree[items[0]].nachfolger.push(items[1]);\n        }\n    })\n\n    return inDegree;\n}"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U5/5-2.html"
    },
    "5.3": {
      "content": {"questions": ["Stellen Sie bei Ihrer Klasse aus der vorletzten Aufgabe die topologische Iterierbarkeit mittels Generator her.\n\nWählen Sie eine Implementierung, die universell gültig, also nicht nur für das Beispiel gilt."],
        "answers": ["//Same Class but with generator instead of naked iterator\nclass Vorrang{\n    constructor(dependencies) {\n        this.deps = dependencies;\n        this.elements = this.elementsset();\n\n    }\n    elementsset(){\n        var elementList = [];\n        this.deps.forEach((dep) =>{\n            dep.forEach((el) =>{\n                if(!elementList.includes(el)){\n                    elementList.push(el);\n                }\n            })\n        });\n        return elementList;\n    }\n    sorted(){\n        return topsort(this.deps,this.elements);\n    }\n    *[Symbol.iterator](){\n        let i = 0;\n        const sorted = topsort(this.deps,this.elements);\n        for(let i=0; i < sorted.length; i++){\n            yield sorted[i];\n        }\n    }\n}\nlet v1 = new Vorrang([[\"studieren\", \"schlafen\"],[\"essen\", \"prüfen\"]]);\n//console.log(v1.elements);\nconsole.log(v1.sorted());\nfor (const element of v1){\n    console.log(element);\n}\n\nfunction topsort(relations, elements){\n    var inDegree = calculate_inDegree(relations, elements);\n    //console.log(inDegree);\n    var next = [];\n    var sortierung = [];\n\n    for(key in inDegree){\n        if(inDegree[key].degree === 0){\n            next.push(key);\n        }\n    }\n\n    var k=1;\n\n    if(next.length === 0){\n        return -2;\n    }\n\n    do{\n        var current_item = next.pop();\n        sortierung.push(current_item);\n        k+=1;\n        inDegree[current_item].nachfolger.forEach(function(item){\n            if(inDegree[item].degree > 1){\n                inDegree[item].degree -= 1;\n            }else{\n                next.push(item);\n            }\n        })\n    } while(next.length !== 0);\n\n    //Zyklus erkannt\n    if(k !== elements.length+1){\n        return -1;\n    }\n    return sortierung;\n}\n\nfunction calculate_inDegree(relations, elements){\n    var inDegree = {};\n    elements.forEach(function(item){\n        inDegree[item] = {name: item, degree:0, nachfolger:[]};\n    })\n\n    relations.forEach(function(items){\n        inDegree[items[1]].degree +=1;\n        if(!inDegree[items[0]].nachfolger.includes(items[1])){\n            inDegree[items[0]].nachfolger.push(items[1]);\n        }\n    })\n\n    return inDegree;\n}\n"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U5/5-3.html"
    },
    "5.4": {
      "content": {"questions": ["Erweitern Sie Ihre Vorrang-Klasse um Logging, indem Sie ein Proxy einfügen. Lassen Sie sich vom Logger bei jedem Schritt ausgeben, wie viele der Vorrangrelationen noch übrig bleiben. Verwenden Sie so weit wie möglich High-Level-Methoden wie Object.keys und High-Level-Datenstrukturen wie Map und Set und deren Methoden, anstatt mühsam von Hand zu iterieren und zu zählen."],
        "answers": ["//Same Class but with Proxy Logger\nclass Vorrang{\n    constructor(dependencies) {\n        this.deps = dependencies;\n        this.elements = this.elementsset();\n\n        this.visited = [];  //Für den Proxy logger um die restlichen Printen zu können.\n    }\n    addOnVisited(node){\n        this.visited.push(node);\n    }\n    elementsset(){      //Lists all nodes from dependencies\n        var elementList = [];\n        this.deps.forEach((dep) =>{\n            dep.forEach((el) =>{\n                if(!elementList.includes(el)){\n                    elementList.push(el);\n                }\n            })\n        });\n        return elementList;\n    }\n    sorted(){\n        return this.topsort(this.deps,this.elements);\n    }\n    *[Symbol.iterator](){\n        let i = 0;\n        const sorted = this.topsort(this.deps,this.elements);\n        for(let i=0; i < sorted.length; i++){\n            yield sorted[i];\n        }\n    }\n    topsort(relations, elements){\n        var inDegree = this.calculate_inDegree(relations, elements);\n        //console.log(inDegree);\n        var next = [];\n        var sortierung = [];\n\n        for(let key in inDegree){\n            if(inDegree[key].degree === 0){\n                next.push(key);\n            }\n        }\n\n        var k=1;\n\n        if(next.length === 0){\n            return -2;\n        }\n\n        do{\n            var current_item = next.pop();\n            sortierung.push(current_item);\n            this.addOnVisited(current_item);\n\n            k+=1;\n            inDegree[current_item].nachfolger.forEach(function(item){\n                if(inDegree[item].degree > 1){\n                    inDegree[item].degree -= 1;\n                }else{\n                    next.push(item);\n                }\n            })\n        } while(next.length !== 0);\n\n        //Zyklus erkannt\n        if(k !== elements.length+1){\n            return -1;\n        }\n        return sortierung;\n    }\n\n    calculate_inDegree(relations, elements){\n        var inDegree = {};\n        elements.forEach(function(item){\n            inDegree[item] = {name: item, degree:0, nachfolger:[]};\n        })\n\n        relations.forEach(function(items){\n            inDegree[items[1]].degree +=1;\n            if(!inDegree[items[0]].nachfolger.includes(items[1])){\n                inDegree[items[0]].nachfolger.push(items[1]);\n            }\n        })\n\n        return inDegree;\n    }\n}\nconst handler={\n    get: function(target, prop, receiver) {\n        if(prop === 'addOnVisited') {\n            console.log(target.visited.length+1 + \" node(s) have been processed\",\"-\",\n                target.elements.length - target.visited.length-1 + \" nodes left\");\n        }\n        return target[prop];\n    }\n};\n\nlet v1 = new Vorrang([[\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"]]);\n\nconst proxyVorrang = new Proxy(v1,handler);\nproxyVorrang.sorted();\n\n\nconst studentenLeben = new Vorrang([ [\"schlafen\", \"studieren\"], [\"essen\", \"studieren\"], [\"studieren\", \"prüfen\"] ]);\n\nfor ( const next of studentenLeben ){\n    console.log( next );\n}\n"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U5/5-4.html"
    },
	"5.5": {
      "content": {"questions": ["Schreiben Sie eine rekursive Funktion deepCopy( struct ) als ES6-Ausdruck, so dass beliebig geschachtelte Arrays und Objekte struct tiefenkopiert werden können. Verwenden Sie zu diesem Zweck den konditionalen ternären Operator, Array.map(), Object.fromEntries() und Object.entries(). Verwenden Sie dabei nur Arrow Functions und Ausdrücke, keine Anweisungen, keine Blöcke. Verwenden Sie nicht die JSON-Methoden."],
        "answers": ["\n\n//ES6 deep copy\nlet deepCopy = (struct) => {return Object.fromEntries(Object.entries(struct));}\n\n\n/*\n* Deep Copy Tests nach Arrange, Act, Assert\n* */\n//arrange (build object)\nlet toCopy ={\n    one: 1,\n    two: [1,2],\n    three: [1,2,3],\n    twotwo: [[1,2],[1,2]],\n    twotwotwo: [[[1],[2]],[[1],[2]]],\n    obj: {\n        a: [1,2,3,4]\n    }\n}\n//act (execute the function that will be tested.)\nshouldBeDeepCopied = deepCopy(toCopy);\n\n//assert\nconsole.assert(toCopy !== shouldBeDeepCopied); //shouldnt be the same object but with exact same content\n\nconsole.log(\"Not copied (origin) object \\n\", toCopy);\nconsole.log(\"deepCopied object: \\n\", shouldBeDeepCopied);\n\nfunction checkForContentEquality(array2D_1,array2D_2){     //For 2D-Arrays\n    result = true;\n    for(let i=0; i < array2D_1.length; i++){\n        for(let j=0; j <array2D_2.length; j++){\n            if(array2D_1[i][j] !== array2D_2[i][j]){\n                result = false;\n                return result;\n            }\n        }\n    }\n    return result;\n}\nconsole.log(\"Check deeper Arrays:\", toCopy.twotwotwo[0]);\nconsole.log(\"Check deeper Arrays:\", shouldBeDeepCopied.twotwotwo[0]);\nconsole.assert(checkForContentEquality(toCopy.twotwotwo[0],shouldBeDeepCopied.twotwotwo[0]));\n"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U5/5-5.html"
    }
  },
  "Übung 6": {
    "6.1": {
      "content": {"questions": ["Schreiben Sie eine Funktion identity_function(), die ein Argument als Parameter entgegen nimmt und eine Funktion zurück gibt, die dieses Argument zurück gibt.","Schreiben Sie eine Addier-Funktion addf(), so dass addf(x)(y) genau x + y zurück gibt. (Es haben also zwei Funktionsaufrufe zu erfolgen. addf(x) liefert eine Funktion, die auf y angewandt wird.)","Schreiben Sie eine Funktion applyf(), die aus einer binären Funktion wie add(x,y) eine Funktion addfberechnet, die mit zwei Aufrufen das gleiche Ergebnis liefert, z.B. addf = applyf(add); addf(x)(y) soll add(x,y) liefern. Entsprechend applyf(mul)(5)(6) soll 30 liefern, wenn mul die binäre Multiplikation ist.","Schreiben Sie eine Funktion curry() (von Currying), die eine binäre Funktion und ein Argument nimmt, um daraus eine Funktion zu erzeugen, die ein zweites Argument entgegen nimmt, z.B. add3 = curry(add, 3);add3(4) ergibt 7. curry(mul, 5)(6) ergibt 30.","Erzeugen Sie die inc-Funktion mit Hilfe einer der Funktionen addf, applyf und curry aus den letzten Aufgaben, ohne die Funktion inc() selbst zu implementieren. (inc(x) soll immer x + 1 ergeben und lässt sich natürlich auch direkt implementieren. Das ist aber hier nicht die Aufgabe.) Vielleicht schaffen Sie es auch, drei Varianten der inc()-Implementierung zu schreiben?","Schreiben Sie eine Funktion methodize(), die eine binäre Funktion (z.B. add, mul) in eine unäre Methode verwandelt. Nach Number.prototype.add = methodize(add); soll (3).add(4) genau 7 ergeben.","Schreiben Sie eine Funktion demethodize(), die eine unäre Methode (z.B. add, mul) in eine binäre Funktion umwandelt. demethodize(Number.prototype.add)(5, 6) soll 11 ergeben.","Schreiben Sie eine Funktion twice(), die eine binäre Funktion in eine unäre Funktion umwandelt, die den einen Parameter zweimal weiter reicht. Z.B. var double = twice(add); double(11) soll 22 ergeben; var square = twice(mul); square(11) soll mul(11,11) === 121 ergeben.","Schreiben Sie eine Funktion composeu(), die zwei unäre Funktionen in eine einzelne unäre Funktion transformiert, die beide nacheinander aufruft, z.B. soll composeu(double, square)(3) genau 36 ergeben.","Schreiben Sie eine Funktion composeb(), die zwei binäre Funktionen in eine einzelne Funktion transformiert, die beide nacheinander aufruft, z.B. composeb(add, mul)(2, 3, 5) soll 25 ergeben.","Schreiben Sie eine Funktion once(), die einer anderen Funktion nur einmal erlaubt, aufgerufen zu werden, z.B. add_once = once(add); add_once(3, 4) soll beim ersten Mal 7 ergeben, beim zweiten Mal soll jedoch add_once(3, 4) einen Fehlerabbruch bewirken.","Schreiben Sie eine Fabrik-Funktion counterf(), die zwei Funktionen inc() und dec() berechnet, die einen Zähler hoch- und herunterzählen. Z.B. counter = counterf(10); Dann soll counter.inc() 11 und counter.dec() wieder 10 ergeben.","Schreiben Sie eine rücknehmbare Funktion revocable(), die als Parameter eine Funktion nimmt und diese bei Aufruf ausführt. Sobald die Funktion aber mit revoke() zurück genommen wurde, führt ein erneuter Aufruf zu einem Fehler. Z.B.\ntemp = revocable(alert);\ntemp.invoke(7); // führt zu alert(7);\ntemp.revoke();\ntemp.invoke(8); // Fehlerabbruch!","Implementieren Sie ein \"Array Wrapper\"-Objekt mit den Methoden get, store und append, so dass ein Angreifer keinen Zugriff auf das innere, private Array hat.\n\nmy_vector = vector();\nmy_vector.append(7);\nmy_vector.store(1, 8);\nmy_vector.get(0) // 7\nmy_vector.get(1) // 8 "],
        "answers": ["function identity_function(x){\n    return function(){\n        return x;\n    }\n}","function addf(x){\n    return function(y){\n        return x+y;\n    }\n}","function applyf(op){\n    return function(x){\n        return function(y){\n            return op(x,y);\n        }\n    }\n}","function curry(op, x){\n    return function(y){\n        return op(x,y);\n    }\n}","function addfInc(x){\n    return function(){\n        return x+1;\n    }\n}","function methodize(op){\n    return function(y){\n        return op(this,y);\n    }\n}","function demethodize(op){\n    return function (x,y){\n        return x.op(y);\n    }\n}","function twice(op){\n    return function(x){\n        return op(x,x);\n    }\n}","function composeu(op1,op2){\n    return function(x){\n        return op2(op1(x));\n    }\n}","function composeb(op1,op2) {\n    return function (x, y, z) {\n        return op2(op1(x, y), z);\n    }\n}","var once = (function (){        //Closure\n   var execution = false;\n   return function(op){\n       if(!execution){\n           execution = true;\n           return function(x,y){\n               return op(x,y);\n           };\n       }else{\n           throw \"Error. Tried more than once.\";\n       }\n   }\n}());","var counterf =(function (x){\n    var counter = x;\n    return {\n        inc : function(){\n            return ++counter;\n        },\n        dec : function(){\n            return --counter;\n        }\n    };\n});","var revocable = (function(action){\n    var revoked = false;\n    return{\n        invoke: function(x){\n          if(revoked){\n              throw \"Error. Revoked\"\n          }\n          return action(x);\n        },\n        revoke: function (){\n            revoked = true;\n        }\n\n    };\n});","var wrapper = (function(){\n    var arr = [1,2,3];\n    return{\n        get: function(){\n            return arr;\n        },\n        store: function(toStore){\n            arr.push(toStore);\n        },\n        append: function(toStore){\n            arr.push(toStore);\n        }\n    }\n});"]
      },
      "references": [
        "MAYBE EDITOR ANSICHT?"
      ],
      "solutionpage": ""
    },
    "6.2": {
      "content": {"questions": ["Schreiben Sie in JavaScript eine Textanalyse. Ermitteln Sie die häufigsten Begriffe im Text Plagiatsresolution. Filtern Sie dabei alle Stoppworte und HTML-Tags. Reduzieren Sie das Ergebnis auf die 3 häufigsten Begriffe. "],
        "answers": ["function mostCommonWords(str, blacklist){    //blacklist: Array mit Stoppworte\n    let strArr = str.split(\" \");\n    let wordlist = [];\n    let counterlist = {};\n    let max=[];\n    new Promise((resolve)=>{strArr.filter((str)=>{return !blacklist.includes(str)}).map(str => {str.replace(\"\\n\",\"\");}).forEach(word =>{\n        if(wordlist.includes(word)){\n            counterlist[word] +=1;\n        }else{\n            wordlist.push(word);\n            counterlist[word] = 0;\n        }\n    });\n    resolve(strArr);\n    }).then(function (value){\n        for(let i = 0; i< 3; i++){\n            let tmp = Math.max(...counterlist);     //Geht wahrscheinlich auch mit reduce..\n            max.push(tmp);\n            counterlist.slice(counterlist[tmp],1);\n        }\n    });\n\n    return max;\n}"]
      },
      "references": [
        "REBUILD THAT"
      ],
      "solutionpage": ""
    }
  },
"Übung 7": {
    "7.1": {
      "content": {"questions": ["Implementieren Sie Performanzmessungen zum Vergleich von innerHTML, innerText, textContent und outerHTML selbstständig in JavaScript durch Nutzung der DOM API. Geben Sie die Messergebnisse als Tabelle aus. Verwenden Sie die eingebauten Zeitmess-Funktionen performance.now (), siehe auch When-milliseconds-are-not-enough-performance-now. Suchen Sie eine möglichst kurze und elegante Lösung.\n\nDabei ist zu beachten, dass Browser, um potenzielle Sicherheitsbedrohungen wie Spectre oder Meltdown zu minimieren, den zurückgegebenen Wert normalerweise um einen bestimmten Betrag runden. Dies führt zu einer gewissen Ungenauigkeit. Beispielsweise rundet Firefox die zurückgegebene Zeit in Schritten von 1 Millisekunde. Diese Zwangsrundung kann man jedoch wiederum abschalten mittels Firefox setting privacy.reduceTimerPrecision, siehe How to get microsecond timings in JavaScript since Spectre and Meltdown."],
        "answers": [""]
      },
      "references": [
        ""
      ],
      "solutionpage": "./../U7/7-1.html"
    },
    "7.2": {
      "content": {"questions": ["Implementieren Sie die interaktive Anwendung \"<a href=\"./../U7/Rednerliste.png\" style=\"color:gray;\">Rednerliste mit Zeitmessung</a>\" selbstständig in JavaScript durch Nutzung der DOM API und der Timer-Funktionen. Neue Redner sollen auf Knopfdruck hinzugefügt werden können. Deren Uhr wird dann sofort automatisch gestartet und alle anderen Uhren angehalten. Bei jedem Redner soll die individuelle, gemessene Redezeit sekundengenau angezeigt werden. Für jeden Redner soll es einen eigenen Start-/Stopp-Button geben. Es soll immer nur eine Uhr laufen. Angezeigt werden sollen die bisherigen Summenzeiten aller Redebeiträge der betreffenden Person. Suchen Sie eine möglichst kurze und elegante Lösung. Achten Sie gleichzeitig auf gute Usability: z.B. wenn die Eingabe mit einem Return beendet wird, soll der Button-Click nicht mehr erforderlich sein, usw."],
        "answers": []
      },
      "references": [
        ""
      ],
      "solutionpage": "./../U7/7-2.html"
    },
	"7.3": {
      "content": {"questions": ["Schreiben Sie eine Web-Oberfläche, in der man beliebige Beziehungen (Vorrang-Relationen) eingeben kann, für die dann die topologische Sortierung per Knopfdruck auf der Webseite ausgegeben wird.\n\nFür die Eingabe können Sie HTML5-Eingabefelder oder contentEditable verwenden."],
        "answers": [""]
      },
      "references": [
        "TODO BUILD THAT"
      ],
      "solutionpage": "./../U7/7-2.html"
    }
  },
"Übung 8": {
    "8.1": {
      "content": {"questions": ["Erstellen Sie auf Ihrem Server www2.inf.h-brs.de (oder localhost) zwei Text-Dateien A.txt und B.txt mit ungefähr gleich vielen Zeilen. Laden Sie mit der fetch-API parallel beide Text-Dateien vom Server. Geben Sie auf einer Webseite den Inhalt beider Dateien zeilenweise aus, wobei der Anfang der Zeile aus A.txt und das Ende aus B.txt stammen soll. Die beiden Dateien sollen also zeilenweise konkateniert werden. Erzielen Sie max. Geschwindigkeit durch maximale Parallelität. Achten Sie gleichzeitig auf Korrektheit. Verwenden Sie dabei ausschließlich die Promise API ohne async / await."],
        "answers": [""]
      },
      "references": [
        ""
      ],
      "solutionpage": "./../U8/8-1.html"
    },
    "8.2": {
      "content": {"questions": ["Lösen Sie die letzte Aufgabe mit async / await statt Promise. "],
        "answers": [""]
      },
      "references": [
        ""
      ],
      "solutionpage": "./../U8/8-2.html"
    },
	"8.3": {
      "content": {"questions": ["Schreiben Sie einen Navigator für die Fachbegriffe des WWW zu den Oberthemen HTML, CSS und JavaScript. Im Hauptmenü sollen diese 3 Oberthemen zur Auswahl stehen. Im Untermenü soll eine zugehörige Liste von Fachbegriffen zum jeweiligen ausgewählten Oberthema stehen. In der Mitte soll eine Dokumentation zum ausgewählten Fachbegriff erscheinen mit Hyperlinks zu den anderen Fachbegriffen. Wird auf einen solchen Hyperlink geklickt, so sollen sich auch die beiden Menüs anpassen. Mit dem Back-Button des Browsers soll ein Zurücksprung möglich sein.\nWWW-Navigator\n\nSchreiben Sie in HTML und CSS nur den responsiven Rahmen für einen solchen WWW-Navigator. Dabei können Sie auch ein schöneres Layout als das hier gezeigte erstellen. Die Inhalte sollen in einer JSON-Datei extern gelagert werden. Mit der fetch-API soll die JSON-Datei asynchron nicht-blockierend geladen werden. Sobald die Inhalte angekommen sind, sollen sie im Browser auch angezeigt werden.\n\nFügen Sie selbst in die JSON-Datei zusätzliche Inhalte zu Themen der Vorlesung als Strings beispielhaft ein. Wenn Sie Inhalte aus fremden Quellen kopieren, so schreiben Sie bitte stets die Quelle als externe Ressource hinzu. Diese soll dann auf der rechten Seite im WWW-Navigator erscheinen."],
        "answers": [""]
      },
      "references": [
        ""
      ],
      "solutionpage": "./../U8/8-3.html"
    }
  },
  "Übung 9": {
    "9.1": {
      "content": {"questions": [],
        "answers": []
      },
      "references": [
        ""
      ],
      "solutionpage": "Yes"
    },
    "9.2": {
      "content": {"questions": [],
        "answers": []
      },
      "references": [
        ""
      ],
      "solutionpage": "Yes"
    },
    "9.3": {
      "content": {"questions": [],
        "answers": []
      },
      "references": [
        ""
      ],
      "solutionpage": "Yes"
    }
  },
  "Übung 10": {
    "10.1": {
      "content": {"questions": ["Registrierungsformular"],
        "answers": ["Yes"]
      },
      "references": [
        "Folie 38 Kapitel 10"
      ],
      "solutionpage": "./Homepage/U10/10-1.php"
    },
    "10.2": {
      "content": {"questions": ["Login"],
        "answers": ["Yes"]
      },
      "references": [
        ""
      ],
      "solutionpage": "./Homepage/U10/10-2.php"
    },
    "10.3": {
      "content": {"questions": [],
        "answers": []
      },
      "references": [
        ""
      ],
      "solutionpage": "Yes"
    }
  }
}
